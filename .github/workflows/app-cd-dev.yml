name: ⚙️ MAKERS-DEV-APP-DEPLOY

on:
  push:
    branches: [ dev ]

env:
  SPRING_PROFILES_ACTIVE: dev
  ECR_APP_NAME: ${{ secrets.ECR_APP_NAME }}-dev
  APP_ECR_REPO: ${{ secrets.ECR_HOST }}/${{ secrets.ECR_APP_NAME }}-dev
  ECR_HOST: ${{ secrets.ECR_HOST }}

jobs:
  build:
    name: CD Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: touch yml files
        run: |
          touch ./src/main/resources/application-dev.yml
          touch ./src/test/resources/application-test.yml

        shell: bash

      - name: copy application.yml files
        run: |
          echo "${{ secrets.APPLICATION_DEV_YML }}" > ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_TEST_YML }}" > ./src/test/resources/application-test.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: 🐘Gradle Build
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Login to ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_HOST

      - name: 🐳Docker Image Build & Push
        run: |
          docker build \
          --build-arg SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE \
          -t $ECR_APP_NAME .
          docker tag $ECR_APP_NAME:latest $APP_ECR_REPO
          docker push $APP_ECR_REPO

      - name: Copy docker-compose.yml
        run: echo "${{ secrets.DOCKER_COMPOSE_DEV_YML }}" > ./docker-compose.yml

      - name: Send docker-compose.yml to EC2 Instance
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.DEV_SERVER_IP }}
          key: ${{ secrets.DEV_PEM_KEY }}
          source: "./docker-compose.yml"
          target: "/home/ec2-user/app/"

      - name: Send deploy script to EC2 Instance
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.DEV_SERVER_IP }}
          key: ${{ secrets.DEV_PEM_KEY }}
          source: "./scripts/"
          target: "/home/ec2-user/app/"

      - name: Docker Container Run
        uses: appleboy/ssh-action@master
        with:
          username: ec2-user
          host: ${{ secrets.DEV_SERVER_IP }}
          key: ${{ secrets.DEV_PEM_KEY }}
          script: |
            cd ~
            sudo chmod +x ./app/scripts/*.sh
            ./app/scripts/deploy.sh
            docker image prune -f